---
import DashboardLayout from "../../layouts/DashboardLayout.astro";

---

<DashboardLayout title="Dashboard">
	<div class="mt-28 px-[15%] py-10 pb-8">
		<div
			class="flex flex-row w-full justify-between gap-4 flex-wrap lg:flex-nowrap"
		>
			<div
				class="bg-white shadow-lg lg:w-1/3 w-full rounded-2xl p-6 flex flex-col items-center justify-center gap-4"
			>
				<!-- TOP -->
				<div
					class="flex flex-row w-full justify-center gap-4 items-start"
				>
					<svg
						class="h-6 w-6"
						fill="#000000"
						viewBox="0 0 1000 1000"
						xmlns="http://www.w3.org/2000/svg"
						><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
							id="SVGRepo_tracerCarrier"
							stroke-linecap="round"
							stroke-linejoin="round"></g><g
							id="SVGRepo_iconCarrier"
							><path
								d="M790 166h-41V83h-84v83H333V83h-83v83h-42q-34 0-58.5 24.5T125 250v582q0 34 24 58.5t59 24.5h582q35 0 59-24.5t24-58.5V250q0-35-24.5-59.5T790 166zm0 666H208V374h582v458zM291 457h208v208H291V457z"
							></path></g
						></svg
					>

					<h2 class="text-2xl font-semibold mb-2">
						Citas Confirmadas
					</h2>
				</div>
				<div class="flex flex-col items-center justify-center">
					<p class="text-3xl font-bold">45</p>
				</div>
			</div>
			<div
				class="bg-white shadow-lg lg:w-1/3 w-full rounded-2xl p-6 flex flex-col items-center justify-center gap-4"
			>
				<!-- TOP -->
				<div
					class="flex flex-row w-full justify-center gap-4 items-start"
				>
					<svg
						viewBox="0 0 24 24"
						fill="none"
						class="h-6 w-6"
						xmlns="http://www.w3.org/2000/svg"
						><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
							id="SVGRepo_tracerCarrier"
							stroke-linecap="round"
							stroke-linejoin="round"></g><g
							id="SVGRepo_iconCarrier"
						>
							<path
								d="M9 20H6C3.79086 20 2 18.2091 2 16V7C2 4.79086 3.79086 3 6 3H17C19.2091 3 21 4.79086 21 7V10"
								stroke="#000000"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"></path>
							<path
								d="M8 2V4"
								stroke="#000000"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"></path>
							<path
								d="M15 2V4"
								stroke="#000000"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"></path>
							<path
								d="M2 8H21"
								stroke="#000000"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"></path>
							<path
								d="M18.5 15.6429L17 17.1429"
								stroke="#000000"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"></path>
							<circle
								cx="17"
								cy="17"
								r="5"
								stroke="#000000"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"></circle>
						</g></svg
					>
					<h2 class="text-2xl font-semibold mb-2">
						Citas Confirmadas
					</h2>
				</div>
				<div class="flex flex-col items-center justify-center">
					<p class="text-3xl font-bold">45</p>
				</div>
			</div>
			<div
				class="bg-white shadow-lg lg:w-1/3 w-full rounded-2xl p-6 flex flex-col items-center justify-center gap-4"
			>
				<!-- TOP -->
				<div
					class="flex flex-row w-full justify-center gap-4 items-start"
				>
					<svg
						class="h-6 w-6"
						viewBox="0 0 24 24"
						id="_24x24_On_Light_Schedule-Add"
						data-name="24x24/On Light/Schedule-Add"
						xmlns="http://www.w3.org/2000/svg"
						fill="#000000"
						><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
							id="SVGRepo_tracerCarrier"
							stroke-linecap="round"
							stroke-linejoin="round"></g><g
							id="SVGRepo_iconCarrier"
						>
							<rect
								id="view-box"
								width="24"
								height="24"
								fill="none"></rect>
							<path
								id="Shape"
								d="M2.75,17.5A2.753,2.753,0,0,1,0,14.75v-10A2.754,2.754,0,0,1,2.5,2.012V.75A.75.75,0,0,1,4,.75V2h9.5V.75a.75.75,0,0,1,1.5,0V2.012A2.753,2.753,0,0,1,17.5,4.75v10a2.752,2.752,0,0,1-2.75,2.75ZM1.5,4.75v10A1.251,1.251,0,0,0,2.75,16h12A1.251,1.251,0,0,0,16,14.75v-10A1.251,1.251,0,0,0,14.75,3.5h-12A1.251,1.251,0,0,0,1.5,4.75Zm6.5,8V10.5H5.75a.75.75,0,0,1,0-1.5H8V6.75a.75.75,0,0,1,1.5,0V9h2.25a.75.75,0,0,1,0,1.5H9.5v2.25a.75.75,0,0,1-1.5,0Z"
								transform="translate(3.25 3.25)"
								fill="#141124"></path>
						</g></svg
					>
					<h2 class="text-2xl font-semibold mb-2">
						Citas Confirmadas
					</h2>
				</div>
				<div class="flex flex-col items-center justify-center">
					<p class="text-3xl font-bold">45</p>
				</div>
			</div>
		</div>
		<div
			class="bg-white shadow-lg rounded-2xl p-8 mt-4 mb-20 flex flex-col items-start w-full"
		>
			<div class="w-full flex justify-between items-center mb-4">
				<h2 class="text-2xl font-semibold">Historial de Citas</h2>
				<div class="flex space-x-4">
					<input
						type="text"
						id="searchInput"
						placeholder="Buscar paciente..."
						class="px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
					/>
					<select
						id="statusFilter"
						class="px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
					>
						<option value="">Todos los estados</option>
						<option value="Reservado">Reservado</option>
						<option value="Completado">Completado</option>
						<option value="Cancelado">Cancelado</option>
					</select>
				</div>
			</div>

			<div class="overflow-x-auto w-full">
				<table id="appointmentsTable" class="w-full">
					<thead class="bg-gray-100">
						<tr>
							<th class="text-left p-3">Paciente</th>
							<th class="text-left p-3">Fecha</th>
							<th class="text-left p-3">Hora</th>
							<th class="text-left p-3">Estado</th>
						</tr>
					</thead>
					<tbody id="tableBody" class="divide-y divide-gray-200">
						<!-- Las filas se generarán dinámicamente -->
					</tbody>
				</table>

				<!-- Paginación -->
				<div
					id="pagination"
					class="flex justify-between items-center mt-4"
				>
					<span id="pageInfo" class="text-gray-600"></span>
					<div class="space-x-2">
						<button
							id="prevPage"
							class="px-3 py-1 bg-gray-200 rounded-md hover:bg-gray-300"
						>
							Anterior
						</button>
						<button
							id="nextPage"
							class="px-3 py-1 bg-gray-200 rounded-md hover:bg-gray-300"
						>
							Siguiente
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script>
		// Datos de ejemplo (simulando datos de backend)
		const appointments = [
			{
				patient: "John Doe",
				date: "12/12/2021",
				time: "10:00",
				status: "Reservado",
			},
			{
				patient: "Jane Doe",
				date: "12/12/2021",
				time: "11:00",
				status: "Reservado",
			},
			{
				patient: "Mike Smith",
				date: "13/12/2021",
				time: "12:00",
				status: "Completado",
			},
			{
				patient: "Emily Brown",
				date: "13/12/2021",
				time: "13:00",
				status: "Cancelado",
			},
			{
				patient: "Carlos Ruiz",
				date: "14/12/2021",
				time: "14:00",
				status: "Reservado",
			},
			{
				patient: "Ana García",
				date: "14/12/2021",
				time: "15:00",
				status: "Completado",
			},
		];

		// Elementos del DOM
		const tableBody = document.getElementById("tableBody");
		const searchInput = document.getElementById("searchInput");
		const statusFilter = document.getElementById("statusFilter");
		const prevPageBtn = document.getElementById("prevPage");
		const nextPageBtn = document.getElementById("nextPage");
		const pageInfo = document.getElementById("pageInfo");

		// Configuración de paginación
		const itemsPerPage = 4;
		let currentPage = 1;
		let filteredAppointments = [];

		// Renderizar tabla
		function renderTable() {
			const searchTerm = (searchInput as any).value?.toLowerCase();
			const statusTerm = (statusFilter as any).value;

			// Filtrar datos
			filteredAppointments = appointments.filter(
				(app) =>
					app.patient.toLowerCase().includes(searchTerm) &&
					(statusTerm === "" || app.status === statusTerm)
			);

			// Calcular páginas
			const totalPages = Math.ceil(
				filteredAppointments.length / itemsPerPage
			);
			const startIndex = (currentPage - 1) * itemsPerPage;
			const endIndex = startIndex + itemsPerPage;
			const paginatedData = filteredAppointments.slice(
				startIndex,
				endIndex
			);

			// Limpiar tabla
			if (tableBody) {
				tableBody.innerHTML = "";
			}

			// Renderizar filas
			paginatedData.forEach((app) => {
				const row = document.createElement("tr");
				row.innerHTML = `
              <td class="p-3">${app.patient}</td>
              <td class="p-3">${app.date}</td>
              <td class="p-3">${app.time}</td>
              <td class="p-3">
                <span class="px-2 py-1 rounded-full text-xs ${
					app.status === "Reservado"
						? "bg-yellow-100 text-yellow-800"
						: app.status === "Completado"
							? "bg-green-100 text-green-800"
							: "bg-red-100 text-red-800"
				}">
                  ${app.status}
                </span>
              </td>
            `;
				tableBody?.appendChild(row);
			});

			// Actualizar información de página
			updatePagination(totalPages);
		}

		// Actualizar información de paginación
		function updatePagination(totalPages: any) {
			if (pageInfo) {
				pageInfo.textContent = `Página ${currentPage} de ${totalPages}`;
			}
			if (prevPageBtn) {
				(prevPageBtn as HTMLButtonElement).disabled = currentPage === 1;
				prevPageBtn.classList.toggle("opacity-50", currentPage === 1);
			}
			if (nextPageBtn) {
				(nextPageBtn as HTMLButtonElement).disabled =
					currentPage === totalPages;
				nextPageBtn.classList.toggle(
					"opacity-50",
					currentPage === totalPages
				);
			}
		}

		// Eventos de filtrado
		searchInput?.addEventListener("input", () => {
			currentPage = 1;
			renderTable();
		});

		statusFilter?.addEventListener("change", () => {
			currentPage = 1;
			renderTable();
		});

		// Navegación de páginas
		prevPageBtn?.addEventListener("click", () => {
			if (currentPage > 1) {
				currentPage--;
				renderTable();
			}
		});

		nextPageBtn?.addEventListener("click", () => {
			const totalPages = Math.ceil(
				filteredAppointments.length / itemsPerPage
			);
			if (currentPage < totalPages) {
				currentPage++;
				renderTable();
			}
		});

		// Renderizar tabla inicial
		renderTable();
	</script>
</DashboardLayout>
